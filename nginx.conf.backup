user galaxy_user;

#user  nobody;
worker_processes  auto;

error_log  /home/galaxy_user/nginx_logs/error.log;
error_log  /home/galaxy_user/nginx_logs/error.log  notice;
error_log  /home/galaxy_user/nginx_logs/error.log  info;

pid        /home/galaxy_user/nginx_logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /home/galaxy_user/nginx_logs/host.access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip on;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 4;
    gzip_proxied any;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml text/javascript application/json application/javascript;
    gzip_buffers 16 8k;
    gzip_disable "MSIE [1-6].(?!.*SV1)";

#    server {
#        listen       80;
#        server_name  localhost;
#
#        #charset koi8-r;
#
#        access_log  /home/galaxy_user/nginx_logs/host.access.log  main;
#
#        location / {
#            root   html;
#            index  index.html index.htm;
#        }
#
#        #error_page  404              /404.html;
#
#        # redirect server error pages to the static page /50x.html
#        #
#        error_page   500 502 503 504  /50x.html;
#        location = /50x.html {
#            root   html;
#        }
#
#    }

    upstream galaxy_app {
        server localhost:8080;
    }

    ## Proxy requests to the Galaxy application
    proxy_next_upstream off;

    server {
    	listen 80 default_server;
    	listen [::]:80 default_server;
    	server_name _;

        client_max_body_size 10G;

        location / {
            proxy_pass http://galaxy_app;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

	## sending files with nginx
        location /_x_accel_redirect/ {
            internal;
            alias /;
        }

	## receiving files with nginx
        location /_upload {
            upload_store /home/galaxy_user/galaxy/database/tmp/upload_store;
            upload_pass_form_field "";
	    upload_store_access user:rw group:rw;
            upload_set_form_field "__${upload_field_name}__is_composite" "true";
            upload_set_form_field "__${upload_field_name}__keys" "name path";
            upload_set_form_field "${upload_field_name}_name" "$upload_file_name";
            upload_set_form_field "${upload_field_name}_path" "$upload_tmp_path";
            upload_pass_args on;
            upload_pass /_upload_done;
        }

        location /_upload_done {
            set $dst /api/tools;
            if ($args ~ nginx_redir=([^&]+)) {
                set $dst $1;
            }
            rewrite "" $dst;
        }

        # serve static content for visualization and interactive environment plugins
        location ~ ^/plugins/(?<plug_type>.+?)/(?<vis_name>.+?)/static/(?<static_file>.*?)$ {
            alias /home/galaxy_user/galaxy/config/plugins/$plug_type/$vis_name/static/$static_file;
            expires 24h;
        }
        location /static {
            alias /home/galaxy_user/galaxy/static;
            expires 24h;
        }
        location /static/style {
            alias /home/galaxy_user/galaxy/static/style/blue;
            expires 24h;
        }
        location /static/scripts {
            alias /home/galaxy_user/galaxy/static/scripts;
            expires 24h;
        }
        location /favicon.ico {
            alias /home/galaxy_user/galaxy/static/favicon.ico;
            expires 24h;
        }
        location /robots.txt {
            alias /home/galaxy_user/galaxy/static/robots.txt;
            expires 24h;
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

}
